<!DOCTYPE html>
<html>
<head>
    <title>User Management System</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .hero-section {
            background: linear-gradient(135deg, #6B73FF 0%, #000DFF 100%);
            color: white;
            padding: 100px 0;
            margin-bottom: 50px;
        }
        .feature-card {
            transition: transform 0.3s;
            cursor: pointer;
            margin-bottom: 30px;
        }
        .feature-card:hover {
            transform: translateY(-10px);
        }
        .feature-icon {
            font-size: 2.5rem;
            margin-bottom: 20px;
            color: #000DFF;
        }
        .stats-section {
            background: #f8f9fa;
            padding: 50px 0;
            margin: 50px 0;
        }
        .stat-card {
            text-align: center;
            padding: 20px;
        }
        .stat-number {
            font-size: 2.5rem;
            font-weight: bold;
            color: #000DFF;
        }
        .nav-link {
            transition: color 0.3s;
        }
        .nav-link:hover {
            color: #000DFF !important;
        }
    </style>
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-light bg-light fixed-top">
        <div class="container">
            <a class="navbar-brand" href="/">
                <i class="fas fa-users"></i> User Management
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/users">Users</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/performance">Performance</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Hero Section -->
    <section class="hero-section">
        <div class="container text-center">
            <h1 class="display-4 mb-4">Welcome to User Management System</h1>
            <p class="lead mb-4">A powerful system with Redis caching for optimal performance</p>
            <a href="/users" class="btn btn-light btn-lg me-3">
                <i class="fas fa-users"></i> Manage Users
            </a>
            <a href="/performance" class="btn btn-outline-light btn-lg">
                <i class="fas fa-chart-line"></i> View Performance
            </a>
        </div>
    </section>

    <!-- Features Section -->
    <section class="container">
        <h2 class="text-center mb-5">Key Features</h2>
        <div class="row">
            <div class="col-md-4">
                <div class="card feature-card">
                    <div class="card-body text-center">
                        <div class="feature-icon">
                            <i class="fas fa-bolt"></i>
                        </div>
                        <h5 class="card-title">Redis Caching</h5>
                        <p class="card-text">Optimized performance with Redis caching system</p>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card feature-card">
                    <div class="card-body text-center">
                        <div class="feature-icon">
                            <i class="fas fa-users"></i>
                        </div>
                        <h5 class="card-title">User Management</h5>
                        <p class="card-text">Complete CRUD operations for user management</p>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card feature-card">
                    <div class="card-body text-center">
                        <div class="feature-icon">
                            <i class="fas fa-chart-line"></i>
                        </div>
                        <h5 class="card-title">Performance Metrics</h5>
                        <p class="card-text">Real-time monitoring of system performance</p>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Stats Section -->
    <section class="stats-section">
        <div class="container">
            <div class="row">
                <div class="col-md-4">
                    <div class="stat-card">
                        <div class="stat-number" id="totalUsers">-</div>
                        <div class="stat-label">Total Users</div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="stat-card">
                        <div class="stat-number" id="cacheEntries">-</div>
                        <div class="stat-label">Cache Entries</div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="stat-card">
                        <div class="stat-number" id="responseTime">-</div>
                        <div class="stat-label">Avg Response Time</div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Update stats
        async function updateStats() {
            try {
                const [usersResponse, cacheResponse] = await Promise.all([
                    fetch('/api/stats/users'),
                    fetch('/cache-stats')
                ]);

                const usersData = await usersResponse.json();
                const cacheData = await cacheResponse.json();

                document.getElementById('totalUsers').textContent = usersData.count;
                document.getElementById('cacheEntries').textContent = cacheData.totalCacheEntries;
                document.getElementById('responseTime').textContent = usersData.avgResponseTime + 'ms';
            } catch (error) {
                console.error('Error updating stats:', error);
            }
        }

        // Update stats every 5 seconds
        setInterval(updateStats, 5000);
        updateStats();
    </script>
</body>
</html> 